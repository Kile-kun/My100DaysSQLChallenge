-- DAY40 (PERCENTILE FUNCTION)

/* CASE STUDY: A Business entity that operates a franchise want to understand their best performing products. 
As a data analyst, write a query to generate the following insight*/

USE sales_db;

SELECT * FROM customers;
SELECT * FROM products;

/*PERCENTILE RANK
Retrieve the total revenue generated by the products sold by the business and the percentile distribution 
of the revenue since the business inception.*/
SELECT p.product_category, 
		ROUND(SUM(s.revenue),2) AS total_sales_order,
		CONCAT((100.00 * ROUND(PERCENT_RANK() OVER (ORDER BY ROUND(SUM(s.revenue),2) ASC),3)), '%') AS percent_rev_distribution
FROM products p
JOIN sales s
ON p.product_id = s.product_id
GROUP BY p.product_category;


/*PERCENTILE_CONT
-- Retrieve the median value(50th Percentile) of the total revenue generated by the products since inception.*/
SELECT p.product_category, 
		ROUND(SUM(s.revenue),2) AS total_sales_order,
		PERCENTILE_CONT(0.5) WITHIN GROUP(ORDER BY ROUND(SUM(s.revenue),2) DESC) OVER() AS median_sales
FROM products p
JOIN sales s
ON p.product_id = s.product_id
GROUP BY p.product_category;

/* PERCENTILE_DISC
In the last month of the year(December, 2017), which product belong to the 10th percentile?*/
SELECT p.product_category, 
		ROUND(SUM(s.revenue),2) AS total_sales_order,
		PERCENTILE_DISC(0.1) WITHIN GROUP(ORDER BY ROUND(SUM(s.revenue),2) DESC) OVER() AS top10_min_rev
FROM products p
JOIN sales s
ON p.product_id = s.product_id
WHERE MONTH(s.order_date) = 12
GROUP BY p.product_category;

-- Return products that have generated more  than the median value to the business?
SELECT p.product_category, 
		ROUND(SUM(s.revenue),2) AS total_sales_order
FROM products p
JOIN sales s
ON p.product_id = s.product_id
WHERE MONTH(s.order_date) = 12
GROUP BY p.product_category
HAVING ROUND(SUM(s.revenue),2) = (SELECT DISTINCT(PERCENTILE_DISC(0.5) WITHIN GROUP(ORDER BY ROUND(SUM(s.revenue),2) DESC) OVER())
					FROM products p
					JOIN sales s
					ON p.product_id = s.product_id
					GROUP BY p.product_name)
ORDER BY total_sales_order DESC;

-- NB: it is advisable you run this from ssms
